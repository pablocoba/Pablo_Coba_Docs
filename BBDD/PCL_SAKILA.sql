DROP DATABASE IF EXISTS PCL_SAKILA;
CREATE DATABASE PCL_SAKILA;
USE PCL_SAKILA;

DROP TABLE IF EXISTS LANGUAGE;
CREATE TABLE LANGUAGE(
LANGUAGE_ID TINYINT PRIMARY KEY,
NAME CHAR(20) NOT NULL,
LAST_UPDATE TIMESTAMP NOT NULL
);

DROP TABLE IF EXISTS FILM;
CREATE TABLE FILM(
	FILM_ID SMALLINT PRIMARY KEY AUTO_INCREMENT,
	TITLE VARCHAR(128) NOT NULL,
	DESCRIPTION TEXT,
	RELEASE_YEAR YEAR,
	LANGUAGE_ID TINYINT NOT NULL,
	ORIGINAL_LANGUAGE_ID TINYINT,
	RENTAL_DURATION TINYINT NOT NULL,
	RENTAL_RATE DECIMAL(4,2) NOT NULL,
	LENGTH SMALLINT,
	REPLACEMENT_COST DECIMAL (4,2) NOT NULL,
	RATING ENUM('PG','G','NC-17','PG-13','R'),
	SPECIAL_FEATURES VARCHAR(50),
	LAST_UPDATE TIMESTAMP NOT NULL,
	FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE(LANGUAGE_ID) ON UPDATE CASCADE,
	FOREIGN KEY (ORIGINAL_LANGUAGE_ID) REFERENCES LANGUAGE(LANGUAGE_ID) ON UPDATE CASCADE ON DELETE SET NULL
);

DROP TABLE IF EXISTS FILM_TEXT;
CREATE TABLE FILM_TECT(
FILM_ID SMALLINT PRIMARY KEY,
TITLE VARCHAR(255),
DESCRIPTION TEXT,
FOREIGN KEY (FILM_ID) REFERENCES FILM(FILM_ID) ON UPDATE CASCADE
);

DROP TABLE IF EXISTS COUNTRY;
CREATE TABLE COUNTRY(
COUNTRY_ID SMALLINT PRIMARY KEY,
COUNTRY VARCHAR(50) NOT NULL,
LAST_UPDATE TIMESTAMP NOT NULL
);

DROP TABLE IF EXISTS CITY;
CREATE TABLE CITY(
CITY_ID SMALLINT PRIMARY KEY,
CITY VARCHAR(50) NOT NULL,
COUNTRY_ID SMALLINT NOT NULL,
LAST_UPDATE TIMESTAMP NOT NULL,
FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRY(COUNTRY_ID) ON UPDATE CASCADE
);

DROP TABLE IF EXISTS ADDRESS;
CREATE TABLE ADDRESS(
ADDRESS_ID SMALLINT PRIMARY KEY,
ADDRESS VARCHAR(50) NOT NULL,
ADDRESS2 VARCHAR(50),
DISTICT VARCHAR(20) NOT NULL,
CITY_ID SMALLINT NOT NULL,
POSTAL_CODE VARCHAR(10),
PHONE VARCHAR(20) NOT NULL,
LOCATION GEOMETRY NOT NULL,
LAST_UPDATE TIMESTAMP NOT NULL,
FOREIGN KEY (CITY_ID) REFERENCES CITY(CITY_ID) ON UPDATE CASCADE
);

DROP TABLE IF EXISTS STAFF;
CREATE TABLE STAFF(
STAFF_ID TINYINT PRIMARY KEY,
FIRST_NAME VARCHAR(45) NOT NULL,
LAST_NAME VARCHAR(45) NOT NULL,
ADDRESS_ID SMALLINT NOT NULL,
PICTURE BLOB,
EMAIL VARCHAR(50),
STORE_ID TINYINT NOT NULL,
ACTIVE TINYINT(1) NOT NULL,
USERNAME VARCHAR(16) NOT NULL,
PASSWORD VARCHAR(40),
LAST_UPDATE TIMESTAMP NOT NULL,
FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID) ON UPDATE CASCADE
);

DROP TABLE IF EXISTS STORE;
CREATE TABLE STORE(
STORE_ID TINYINT PRIMARY KEY,
MANAGER_STAFF_ID TINYINT NOT NULL,
ADDRESS_ID SMALLINT NOT NULL,
LAST_UPDATE TIMESTAMP NOT NULL,
FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID) ON UPDATE CASCADE,
FOREIGN KEY (MANAGER_STAFF_ID) REFERENCES STAFF(STAFF_ID) ON UPDATE CASCADE

);

ALTER TABLE STAFF ADD FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);

DROP TABLE IF EXISTS CUSTOMER;
CREATE TABLE CUSTOMER(
CUSTOMER_ID SMALLINT PRIMARY KEY,
STORE_ID TINYINT NOT NULL,
FIRST_NAME VARCHAR(45) NOT NULL,
LAST_NAME VARCHAR(45) NOT NULL,
EMAL VARCHAR(50),
ADDRESS_ID SMALLINT NOT NULL,
ACTIVE TINYINT(1) NOT NULL,
CREATE_DATE DATETIME  NOT NULL,
LAST_UPDATE TIMESTAMP,
FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID) ON UPDATE CASCADE,
FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID) ON UPDATE CASCADE
);




DROP TABLE IF EXISTS INVENTORY;
CREATE TABLE INVENTORY(
INVENTORY_ID MEDIUMINT PRIMARY KEY,
FILM_ID SMALLINT NOT NULL,
STORE_ID TINYINT NOT NULL,
LAST_UPDATE TIMESTAMP NOT NULL,
FOREIGN KEY (FILM_ID) REFERENCES FILM(FILM_ID) ON UPDATE CASCADE,
FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID) ON UPDATE CASCADE
);

DROP TABLE IF EXISTS RENTAL;
CREATE TABLE RENTAL(
RENTAL_ID INT PRIMARY KEY,
RENTAL_DATE DATETIME NOT NULL,
INVENTORY_ID MEDIUMINT NOT NULL,
CUSTOMER_ID SMALLINT NOT NULL,
RETURN_DATE DATETIME,
STAFF_ID TINYINT NOT NULL,
LAST_UPDATE TIMESTAMP,
FOREIGN KEY (INVENTORY_ID) REFERENCES INVENTORY(INVENTORY_ID) ON UPDATE CASCADE,
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON UPDATE CASCADE,
FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID) ON UPDATE CASCADE
);

DROP TABLE IF EXISTS PAYMENT;
CREATE TABLE PAYMENT(
PAYMENT_ID SMALLINT PRIMARY KEY,
CUSTOMER_ID SMALLINT NOT NULL,
STAFF_ID TINYINT NOT NULL,
RENTAL_ID INT,
AMOUNT DECIMAL(5,2) NOT NULL,
PAYMENT_DATE DATETIME NOT NULL,
LAST_UPDATE TIMESTAMP,
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON UPDATE CASCADE,
FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID) ON UPDATE CASCADE,
FOREIGN KEY (RENTAL_ID) REFERENCES RENTAL(RENTAL_ID) ON DELETE SET NULL ON UPDATE CASCADE
);


DROP TABLE IF EXISTS FILM_TEXT;
CREATE TABLE FILM_TEXT(
FILM_ID SMALLINT PRIMARY KEY,
TITLE VARCHAR(255) NOT NULL,
DESCRIPTION TEXT,
FOREIGN KEY (FILM_ID) REFERENCES FILM(FILM_ID) ON UPDATE CASCADE
);

DROP TABLE IF EXISTS ACTOR;
CREATE TABLE ACTOR(
ACTOR_ID SMALLINT PRIMARY KEY,
FIRST_NAME VARCHAR(45) NOT NULL,
LAST_NAME VARCHAR(45) NOT NULL,
LAST_UPDATE TIMESTAMP NOT NULL
);

DROP TABLE IF EXISTS FILM_ACTOR;
CREATE TABLE FILM_ACTOR(
ACTOR_ID SMALLINT,
FILM_ID SMALLINT,
LAST_UPDATE TIMESTAMP NOT NULL,
PRIMARY KEY (ACTOR_ID, FILM_ID),
FOREIGN KEY (ACTOR_ID) REFERENCES ACTOR(ACTOR_ID) ON UPDATE CASCADE,
FOREIGN KEY (FILM_ID) REFERENCES FILM(FILM_ID) ON UPDATE CASCADE
);

DROP TABLE IF EXISTS CATEGORY;
CREATE TABLE CATEGORY(
CATEGORY_ID TINYINT PRIMARY KEY,
NAME VARCHAR(25) NOT NULL,
LAST_UPDATE TIMESTAMP NOT NULL
);

DROP TABLE IF EXISTS FILM_CATEGORY;
CREATE TABLE FILM_CATEGORY(
FILM_ID SMALLINT,
CATEGORY_ID TINYINT,
LAST_UPDATE TIMESTAMP NOT NULL,
PRIMARY KEY(FILM_ID, CATEGORY_ID),
FOREIGN KEY (FILM_ID) REFERENCES FILM(FILM_ID) ON UPDATE CASCADE,
FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(CATEGORY_ID) ON UPDATE CASCADE
);

